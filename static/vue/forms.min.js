class Errors{constructor(){this.errors={}}any(){return Object.keys(this.errors).length>0}clear(r){delete this.errors[r]}get(r){return this.errors[r]?this.errors[r]:null}has(r){return this.errors.hasOwnProperty(r)}record(r){this.errors=r}}class Form{constructor(r){this.originalData=r;for(let s in r)this[s]=r[s];this.errors=new Errors}reset(){for(let r in this.originalData)this[r]=""}data(){let r=Object.assign({},this);return delete r.originalData,delete r.errors,r}submit(r,s){axios[r](s,this.data()).then(r=>{let s=Object.keys(r.data.count.errors).length;console.log("request sent"),s>0?this.errors.record(r.data.count.errors):(this.reset(),this.onSuccess(),console.log("Errors found"))})}onSuccess(){}}